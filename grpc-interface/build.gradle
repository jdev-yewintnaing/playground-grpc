buildscript {
    ext {
        protobufVersion = '4.29.2'
        protobufPluginVersion = '0.9.4'
        grpcVersion = '1.69.0'
    }
}



plugins {
    id 'java-library'
    id 'idea'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.6.1'
    implementation 'io.grpc:grpc-stub:1.15.1'
    implementation 'io.grpc:grpc-protobuf:1.15.1'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }


}


repositories {
    mavenCentral()
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.15.1'
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc { }
            }
        }
    }
}


idea {
    module {
        sourceDirs += file('src/generated/main/java')
        sourceDirs += file('src/generated/main/grpc')
        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/grpc')
    }
}